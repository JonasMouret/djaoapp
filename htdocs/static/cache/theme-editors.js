!function(n){var e={};function t(a){if(e[a])return e[a].exports;var r=e[a]={i:a,l:!1,exports:{}};return n[a].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=n,t.c=e,t.d=function(n,e,a){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:a})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)t.d(a,r,function(e){return n[e]}.bind(null,r));return a},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/static/cache/",t(t.s=217)}({1:function(n,e){n.exports=function(n){function e(n){"undefined"!=typeof console&&(console.error||console.log)("[Script Loader]",n)}try{"undefined"!=typeof execScript&&"undefined"!=typeof attachEvent&&"undefined"==typeof addEventListener?execScript(n):"undefined"!=typeof eval?eval.call(null,n):e("EvalError: No eval function available")}catch(n){e(n)}}},217:function(n,e,t){"use strict";t.r(e);t(5),t(218),t(220),t(222),t(224)},218:function(n,e,t){t(1)(t(219))},219:function(n,e){n.exports="/*!\n * jQuery throttle / debounce - v1.1 - 3/7/2010\n * http://benalman.com/projects/jquery-throttle-debounce-plugin/\n * \n * Copyright (c) 2010 \"Cowboy\" Ben Alman\n * Dual licensed under the MIT and GPL licenses.\n * http://benalman.com/about/license/\n */\n\n// Script: jQuery throttle / debounce: Sometimes, less is more!\n//\n// *Version: 1.1, Last updated: 3/7/2010*\n// \n// Project Home - http://benalman.com/projects/jquery-throttle-debounce-plugin/\n// GitHub       - http://github.com/cowboy/jquery-throttle-debounce/\n// Source       - http://github.com/cowboy/jquery-throttle-debounce/raw/master/jquery.ba-throttle-debounce.js\n// (Minified)   - http://github.com/cowboy/jquery-throttle-debounce/raw/master/jquery.ba-throttle-debounce.min.js (0.7kb)\n// \n// About: License\n// \n// Copyright (c) 2010 \"Cowboy\" Ben Alman,\n// Dual licensed under the MIT and GPL licenses.\n// http://benalman.com/about/license/\n// \n// About: Examples\n// \n// These working examples, complete with fully commented code, illustrate a few\n// ways in which this plugin can be used.\n// \n// Throttle - http://benalman.com/code/projects/jquery-throttle-debounce/examples/throttle/\n// Debounce - http://benalman.com/code/projects/jquery-throttle-debounce/examples/debounce/\n// \n// About: Support and Testing\n// \n// Information about what version or versions of jQuery this plugin has been\n// tested with, what browsers it has been tested in, and where the unit tests\n// reside (so you can test it yourself).\n// \n// jQuery Versions - none, 1.3.2, 1.4.2\n// Browsers Tested - Internet Explorer 6-8, Firefox 2-3.6, Safari 3-4, Chrome 4-5, Opera 9.6-10.1.\n// Unit Tests      - http://benalman.com/code/projects/jquery-throttle-debounce/unit/\n// \n// About: Release History\n// \n// 1.1 - (3/7/2010) Fixed a bug in <jQuery.throttle> where trailing callbacks\n//       executed later than they should. Reworked a fair amount of internal\n//       logic as well.\n// 1.0 - (3/6/2010) Initial release as a stand-alone project. Migrated over\n//       from jquery-misc repo v0.4 to jquery-throttle repo v1.0, added the\n//       no_trailing throttle parameter and debounce functionality.\n// \n// Topic: Note for non-jQuery users\n// \n// jQuery isn't actually required for this plugin, because nothing internal\n// uses any jQuery methods or properties. jQuery is just used as a namespace\n// under which these methods can exist.\n// \n// Since jQuery isn't actually required for this plugin, if jQuery doesn't exist\n// when this plugin is loaded, the method described below will be created in\n// the `Cowboy` namespace. Usage will be exactly the same, but instead of\n// $.method() or jQuery.method(), you'll need to use Cowboy.method().\n\n(function(window,undefined){\n  '$:nomunge'; // Used by YUI compressor.\n  \n  // Since jQuery really isn't required for this plugin, use `jQuery` as the\n  // namespace only if it already exists, otherwise use the `Cowboy` namespace,\n  // creating it if necessary.\n  var $ = window.jQuery || window.Cowboy || ( window.Cowboy = {} ),\n    \n    // Internal method reference.\n    jq_throttle;\n  \n  // Method: jQuery.throttle\n  // \n  // Throttle execution of a function. Especially useful for rate limiting\n  // execution of handlers on events like resize and scroll. If you want to\n  // rate-limit execution of a function to a single time, see the\n  // <jQuery.debounce> method.\n  // \n  // In this visualization, | is a throttled-function call and X is the actual\n  // callback execution:\n  // \n  // > Throttled with `no_trailing` specified as false or unspecified:\n  // > ||||||||||||||||||||||||| (pause) |||||||||||||||||||||||||\n  // > X    X    X    X    X    X        X    X    X    X    X    X\n  // > \n  // > Throttled with `no_trailing` specified as true:\n  // > ||||||||||||||||||||||||| (pause) |||||||||||||||||||||||||\n  // > X    X    X    X    X             X    X    X    X    X\n  // \n  // Usage:\n  // \n  // > var throttled = jQuery.throttle( delay, [ no_trailing, ] callback );\n  // > \n  // > jQuery('selector').bind( 'someevent', throttled );\n  // > jQuery('selector').unbind( 'someevent', throttled );\n  // \n  // This also works in jQuery 1.4+:\n  // \n  // > jQuery('selector').bind( 'someevent', jQuery.throttle( delay, [ no_trailing, ] callback ) );\n  // > jQuery('selector').unbind( 'someevent', callback );\n  // \n  // Arguments:\n  // \n  //  delay - (Number) A zero-or-greater delay in milliseconds. For event\n  //    callbacks, values around 100 or 250 (or even higher) are most useful.\n  //  no_trailing - (Boolean) Optional, defaults to false. If no_trailing is\n  //    true, callback will only execute every `delay` milliseconds while the\n  //    throttled-function is being called. If no_trailing is false or\n  //    unspecified, callback will be executed one final time after the last\n  //    throttled-function call. (After the throttled-function has not been\n  //    called for `delay` milliseconds, the internal counter is reset)\n  //  callback - (Function) A function to be executed after delay milliseconds.\n  //    The `this` context and all arguments are passed through, as-is, to\n  //    `callback` when the throttled-function is executed.\n  // \n  // Returns:\n  // \n  //  (Function) A new, throttled, function.\n  \n  $.throttle = jq_throttle = function( delay, no_trailing, callback, debounce_mode ) {\n    // After wrapper has stopped being called, this timeout ensures that\n    // `callback` is executed at the proper times in `throttle` and `end`\n    // debounce modes.\n    var timeout_id,\n      \n      // Keep track of the last time `callback` was executed.\n      last_exec = 0;\n    \n    // `no_trailing` defaults to falsy.\n    if ( typeof no_trailing !== 'boolean' ) {\n      debounce_mode = callback;\n      callback = no_trailing;\n      no_trailing = undefined;\n    }\n    \n    // The `wrapper` function encapsulates all of the throttling / debouncing\n    // functionality and when executed will limit the rate at which `callback`\n    // is executed.\n    function wrapper() {\n      var that = this,\n        elapsed = +new Date() - last_exec,\n        args = arguments;\n      \n      // Execute `callback` and update the `last_exec` timestamp.\n      function exec() {\n        last_exec = +new Date();\n        callback.apply( that, args );\n      };\n      \n      // If `debounce_mode` is true (at_begin) this is used to clear the flag\n      // to allow future `callback` executions.\n      function clear() {\n        timeout_id = undefined;\n      };\n      \n      if ( debounce_mode && !timeout_id ) {\n        // Since `wrapper` is being called for the first time and\n        // `debounce_mode` is true (at_begin), execute `callback`.\n        exec();\n      }\n      \n      // Clear any existing timeout.\n      timeout_id && clearTimeout( timeout_id );\n      \n      if ( debounce_mode === undefined && elapsed > delay ) {\n        // In throttle mode, if `delay` time has been exceeded, execute\n        // `callback`.\n        exec();\n        \n      } else if ( no_trailing !== true ) {\n        // In trailing throttle mode, since `delay` time has not been\n        // exceeded, schedule `callback` to execute `delay` ms after most\n        // recent execution.\n        // \n        // If `debounce_mode` is true (at_begin), schedule `clear` to execute\n        // after `delay` ms.\n        // \n        // If `debounce_mode` is false (at end), schedule `callback` to\n        // execute after `delay` ms.\n        timeout_id = setTimeout( debounce_mode ? clear : exec, debounce_mode === undefined ? delay - elapsed : delay );\n      }\n    };\n    \n    // Set the guid of `wrapper` function to the same of original callback, so\n    // it can be removed in jQuery 1.4+ .unbind or .die by using the original\n    // callback as a reference.\n    if ( $.guid ) {\n      wrapper.guid = callback.guid = callback.guid || $.guid++;\n    }\n    \n    // Return the wrapper function.\n    return wrapper;\n  };\n  \n  // Method: jQuery.debounce\n  // \n  // Debounce execution of a function. Debouncing, unlike throttling,\n  // guarantees that a function is only executed a single time, either at the\n  // very beginning of a series of calls, or at the very end. If you want to\n  // simply rate-limit execution of a function, see the <jQuery.throttle>\n  // method.\n  // \n  // In this visualization, | is a debounced-function call and X is the actual\n  // callback execution:\n  // \n  // > Debounced with `at_begin` specified as false or unspecified:\n  // > ||||||||||||||||||||||||| (pause) |||||||||||||||||||||||||\n  // >                          X                                 X\n  // > \n  // > Debounced with `at_begin` specified as true:\n  // > ||||||||||||||||||||||||| (pause) |||||||||||||||||||||||||\n  // > X                                 X\n  // \n  // Usage:\n  // \n  // > var debounced = jQuery.debounce( delay, [ at_begin, ] callback );\n  // > \n  // > jQuery('selector').bind( 'someevent', debounced );\n  // > jQuery('selector').unbind( 'someevent', debounced );\n  // \n  // This also works in jQuery 1.4+:\n  // \n  // > jQuery('selector').bind( 'someevent', jQuery.debounce( delay, [ at_begin, ] callback ) );\n  // > jQuery('selector').unbind( 'someevent', callback );\n  // \n  // Arguments:\n  // \n  //  delay - (Number) A zero-or-greater delay in milliseconds. For event\n  //    callbacks, values around 100 or 250 (or even higher) are most useful.\n  //  at_begin - (Boolean) Optional, defaults to false. If at_begin is false or\n  //    unspecified, callback will only be executed `delay` milliseconds after\n  //    the last debounced-function call. If at_begin is true, callback will be\n  //    executed only at the first debounced-function call. (After the\n  //    throttled-function has not been called for `delay` milliseconds, the\n  //    internal counter is reset)\n  //  callback - (Function) A function to be executed after delay milliseconds.\n  //    The `this` context and all arguments are passed through, as-is, to\n  //    `callback` when the debounced-function is executed.\n  // \n  // Returns:\n  // \n  //  (Function) A new, debounced, function.\n  \n  $.debounce = function( delay, at_begin, callback ) {\n    return callback === undefined\n      ? jq_throttle( delay, at_begin, false )\n      : jq_throttle( delay, callback, at_begin !== false );\n  };\n  \n})(this);\n"},220:function(n,e,t){t(1)(t(221))},221:function(n,e){n.exports='/*!\n * Bootstrap Colorpicker v2.5.2\n * https://itsjavi.com/bootstrap-colorpicker/\n *\n * Originally written by (c) 2012 Stefan Petre\n * Licensed under the Apache License v2.0\n * http://www.apache.org/licenses/LICENSE-2.0.txt\n *\n */\n\n(function(root, factory) {\n  if (typeof define === \'function\' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define(["jquery"], function(jq) {\n      return (factory(jq));\n    });\n  } else if (typeof exports === \'object\') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require("jquery"));\n  } else if (jQuery && !jQuery.fn.colorpicker) {\n    factory(jQuery);\n  }\n}(this, function($) {\n  \'use strict\';\n  /**\n   * Color manipulation helper class\n   *\n   * @param {Object|String} [val]\n   * @param {Object} [predefinedColors]\n   * @param {String|null} [fallbackColor]\n   * @param {String|null} [fallbackFormat]\n   * @param {Boolean} [hexNumberSignPrefix]\n   * @constructor\n   */\n  var Color = function(\n    val, predefinedColors, fallbackColor, fallbackFormat, hexNumberSignPrefix) {\n    this.fallbackValue = fallbackColor ?\n      (\n        fallbackColor && (typeof fallbackColor.h !== \'undefined\') ?\n        fallbackColor :\n        this.value = {\n          h: 0,\n          s: 0,\n          b: 0,\n          a: 1\n        }\n      ) :\n      null;\n\n    this.fallbackFormat = fallbackFormat ? fallbackFormat : \'rgba\';\n\n    this.hexNumberSignPrefix = hexNumberSignPrefix === true;\n\n    this.value = this.fallbackValue;\n\n    this.origFormat = null; // original string format\n\n    this.predefinedColors = predefinedColors ? predefinedColors : {};\n\n    // We don\'t want to share aliases across instances so we extend new object\n    this.colors = $.extend({}, Color.webColors, this.predefinedColors);\n\n    if (val) {\n      if (typeof val.h !== \'undefined\') {\n        this.value = val;\n      } else {\n        this.setColor(String(val));\n      }\n    }\n\n    if (!this.value) {\n      // Initial value is always black if no arguments are passed or val is empty\n      this.value = {\n        h: 0,\n        s: 0,\n        b: 0,\n        a: 1\n      };\n    }\n  };\n\n  Color.webColors = { // 140 predefined colors from the HTML Colors spec\n    "aliceblue": "f0f8ff",\n    "antiquewhite": "faebd7",\n    "aqua": "00ffff",\n    "aquamarine": "7fffd4",\n    "azure": "f0ffff",\n    "beige": "f5f5dc",\n    "bisque": "ffe4c4",\n    "black": "000000",\n    "blanchedalmond": "ffebcd",\n    "blue": "0000ff",\n    "blueviolet": "8a2be2",\n    "brown": "a52a2a",\n    "burlywood": "deb887",\n    "cadetblue": "5f9ea0",\n    "chartreuse": "7fff00",\n    "chocolate": "d2691e",\n    "coral": "ff7f50",\n    "cornflowerblue": "6495ed",\n    "cornsilk": "fff8dc",\n    "crimson": "dc143c",\n    "cyan": "00ffff",\n    "darkblue": "00008b",\n    "darkcyan": "008b8b",\n    "darkgoldenrod": "b8860b",\n    "darkgray": "a9a9a9",\n    "darkgreen": "006400",\n    "darkkhaki": "bdb76b",\n    "darkmagenta": "8b008b",\n    "darkolivegreen": "556b2f",\n    "darkorange": "ff8c00",\n    "darkorchid": "9932cc",\n    "darkred": "8b0000",\n    "darksalmon": "e9967a",\n    "darkseagreen": "8fbc8f",\n    "darkslateblue": "483d8b",\n    "darkslategray": "2f4f4f",\n    "darkturquoise": "00ced1",\n    "darkviolet": "9400d3",\n    "deeppink": "ff1493",\n    "deepskyblue": "00bfff",\n    "dimgray": "696969",\n    "dodgerblue": "1e90ff",\n    "firebrick": "b22222",\n    "floralwhite": "fffaf0",\n    "forestgreen": "228b22",\n    "fuchsia": "ff00ff",\n    "gainsboro": "dcdcdc",\n    "ghostwhite": "f8f8ff",\n    "gold": "ffd700",\n    "goldenrod": "daa520",\n    "gray": "808080",\n    "green": "008000",\n    "greenyellow": "adff2f",\n    "honeydew": "f0fff0",\n    "hotpink": "ff69b4",\n    "indianred": "cd5c5c",\n    "indigo": "4b0082",\n    "ivory": "fffff0",\n    "khaki": "f0e68c",\n    "lavender": "e6e6fa",\n    "lavenderblush": "fff0f5",\n    "lawngreen": "7cfc00",\n    "lemonchiffon": "fffacd",\n    "lightblue": "add8e6",\n    "lightcoral": "f08080",\n    "lightcyan": "e0ffff",\n    "lightgoldenrodyellow": "fafad2",\n    "lightgrey": "d3d3d3",\n    "lightgreen": "90ee90",\n    "lightpink": "ffb6c1",\n    "lightsalmon": "ffa07a",\n    "lightseagreen": "20b2aa",\n    "lightskyblue": "87cefa",\n    "lightslategray": "778899",\n    "lightsteelblue": "b0c4de",\n    "lightyellow": "ffffe0",\n    "lime": "00ff00",\n    "limegreen": "32cd32",\n    "linen": "faf0e6",\n    "magenta": "ff00ff",\n    "maroon": "800000",\n    "mediumaquamarine": "66cdaa",\n    "mediumblue": "0000cd",\n    "mediumorchid": "ba55d3",\n    "mediumpurple": "9370d8",\n    "mediumseagreen": "3cb371",\n    "mediumslateblue": "7b68ee",\n    "mediumspringgreen": "00fa9a",\n    "mediumturquoise": "48d1cc",\n    "mediumvioletred": "c71585",\n    "midnightblue": "191970",\n    "mintcream": "f5fffa",\n    "mistyrose": "ffe4e1",\n    "moccasin": "ffe4b5",\n    "navajowhite": "ffdead",\n    "navy": "000080",\n    "oldlace": "fdf5e6",\n    "olive": "808000",\n    "olivedrab": "6b8e23",\n    "orange": "ffa500",\n    "orangered": "ff4500",\n    "orchid": "da70d6",\n    "palegoldenrod": "eee8aa",\n    "palegreen": "98fb98",\n    "paleturquoise": "afeeee",\n    "palevioletred": "d87093",\n    "papayawhip": "ffefd5",\n    "peachpuff": "ffdab9",\n    "peru": "cd853f",\n    "pink": "ffc0cb",\n    "plum": "dda0dd",\n    "powderblue": "b0e0e6",\n    "purple": "800080",\n    "red": "ff0000",\n    "rosybrown": "bc8f8f",\n    "royalblue": "4169e1",\n    "saddlebrown": "8b4513",\n    "salmon": "fa8072",\n    "sandybrown": "f4a460",\n    "seagreen": "2e8b57",\n    "seashell": "fff5ee",\n    "sienna": "a0522d",\n    "silver": "c0c0c0",\n    "skyblue": "87ceeb",\n    "slateblue": "6a5acd",\n    "slategray": "708090",\n    "snow": "fffafa",\n    "springgreen": "00ff7f",\n    "steelblue": "4682b4",\n    "tan": "d2b48c",\n    "teal": "008080",\n    "thistle": "d8bfd8",\n    "tomato": "ff6347",\n    "turquoise": "40e0d0",\n    "violet": "ee82ee",\n    "wheat": "f5deb3",\n    "white": "ffffff",\n    "whitesmoke": "f5f5f5",\n    "yellow": "ffff00",\n    "yellowgreen": "9acd32",\n    "transparent": "transparent"\n  };\n\n  Color.prototype = {\n    constructor: Color,\n    colors: {}, // merged web and predefined colors\n    predefinedColors: {},\n    /**\n     * @return {Object}\n     */\n    getValue: function() {\n      return this.value;\n    },\n    /**\n     * @param {Object} val\n     */\n    setValue: function(val) {\n      this.value = val;\n    },\n    _sanitizeNumber: function(val) {\n      if (typeof val === \'number\') {\n        return val;\n      }\n      if (isNaN(val) || (val === null) || (val === \'\') || (val === undefined)) {\n        return 1;\n      }\n      if (val === \'\') {\n        return 0;\n      }\n      if (typeof val.toLowerCase !== \'undefined\') {\n        if (val.match(/^\\./)) {\n          val = "0" + val;\n        }\n        return Math.ceil(parseFloat(val) * 100) / 100;\n      }\n      return 1;\n    },\n    isTransparent: function(strVal) {\n      if (!strVal || !(typeof strVal === \'string\' || strVal instanceof String)) {\n        return false;\n      }\n      strVal = strVal.toLowerCase().trim();\n      return (strVal === \'transparent\') || (strVal.match(/#?00000000/)) || (strVal.match(/(rgba|hsla)\\(0,0,0,0?\\.?0\\)/));\n    },\n    rgbaIsTransparent: function(rgba) {\n      return ((rgba.r === 0) && (rgba.g === 0) && (rgba.b === 0) && (rgba.a === 0));\n    },\n    // parse a string to HSB\n    /**\n     * @protected\n     * @param {String} strVal\n     * @returns {boolean} Returns true if it could be parsed, false otherwise\n     */\n    setColor: function(strVal) {\n      strVal = strVal.toLowerCase().trim();\n      if (strVal) {\n        if (this.isTransparent(strVal)) {\n          this.value = {\n            h: 0,\n            s: 0,\n            b: 0,\n            a: 0\n          };\n          return true;\n        } else {\n          var parsedColor = this.parse(strVal);\n          if (parsedColor) {\n            this.value = this.value = {\n              h: parsedColor.h,\n              s: parsedColor.s,\n              b: parsedColor.b,\n              a: parsedColor.a\n            };\n            if (!this.origFormat) {\n              this.origFormat = parsedColor.format;\n            }\n          } else if (this.fallbackValue) {\n            // if parser fails, defaults to fallbackValue if defined, otherwise the value won\'t be changed\n            this.value = this.fallbackValue;\n          }\n        }\n      }\n      return false;\n    },\n    setHue: function(h) {\n      this.value.h = 1 - h;\n    },\n    setSaturation: function(s) {\n      this.value.s = s;\n    },\n    setBrightness: function(b) {\n      this.value.b = 1 - b;\n    },\n    setAlpha: function(a) {\n      this.value.a = Math.round((parseInt((1 - a) * 100, 10) / 100) * 100) / 100;\n    },\n    toRGB: function(h, s, b, a) {\n      if (arguments.length === 0) {\n        h = this.value.h;\n        s = this.value.s;\n        b = this.value.b;\n        a = this.value.a;\n      }\n\n      h *= 360;\n      var R, G, B, X, C;\n      h = (h % 360) / 60;\n      C = b * s;\n      X = C * (1 - Math.abs(h % 2 - 1));\n      R = G = B = b - C;\n\n      h = ~~h;\n      R += [C, X, 0, 0, X, C][h];\n      G += [X, C, C, X, 0, 0][h];\n      B += [0, 0, X, C, C, X][h];\n\n      return {\n        r: Math.round(R * 255),\n        g: Math.round(G * 255),\n        b: Math.round(B * 255),\n        a: a\n      };\n    },\n    toHex: function(ignoreFormat, h, s, b, a) {\n      if (arguments.length <= 1) {\n        h = this.value.h;\n        s = this.value.s;\n        b = this.value.b;\n        a = this.value.a;\n      }\n\n      var prefix = \'#\';\n      var rgb = this.toRGB(h, s, b, a);\n\n      if (this.rgbaIsTransparent(rgb)) {\n        return \'transparent\';\n      }\n\n      if (!ignoreFormat) {\n        prefix = (this.hexNumberSignPrefix ? \'#\' : \'\');\n      }\n\n      var hexStr = prefix + (\n          (1 << 24) +\n          (parseInt(rgb.r) << 16) +\n          (parseInt(rgb.g) << 8) +\n          parseInt(rgb.b))\n        .toString(16)\n        .slice(1);\n\n      return hexStr;\n    },\n    toHSL: function(h, s, b, a) {\n      if (arguments.length === 0) {\n        h = this.value.h;\n        s = this.value.s;\n        b = this.value.b;\n        a = this.value.a;\n      }\n\n      var H = h,\n        L = (2 - s) * b,\n        S = s * b;\n      if (L > 0 && L <= 1) {\n        S /= L;\n      } else {\n        S /= 2 - L;\n      }\n      L /= 2;\n      if (S > 1) {\n        S = 1;\n      }\n      return {\n        h: isNaN(H) ? 0 : H,\n        s: isNaN(S) ? 0 : S,\n        l: isNaN(L) ? 0 : L,\n        a: isNaN(a) ? 0 : a\n      };\n    },\n    toAlias: function(r, g, b, a) {\n      var c, rgb = (arguments.length === 0) ? this.toHex(true) : this.toHex(true, r, g, b, a);\n\n      // support predef. colors in non-hex format too, as defined in the alias itself\n      var original = this.origFormat === \'alias\' ? rgb : this.toString(false, this.origFormat);\n\n      for (var alias in this.colors) {\n        c = this.colors[alias].toLowerCase().trim();\n        if ((c === rgb) || (c === original)) {\n          return alias;\n        }\n      }\n      return false;\n    },\n    RGBtoHSB: function(r, g, b, a) {\n      r /= 255;\n      g /= 255;\n      b /= 255;\n\n      var H, S, V, C;\n      V = Math.max(r, g, b);\n      C = V - Math.min(r, g, b);\n      H = (C === 0 ? null :\n        V === r ? (g - b) / C :\n        V === g ? (b - r) / C + 2 :\n        (r - g) / C + 4\n      );\n      H = ((H + 360) % 6) * 60 / 360;\n      S = C === 0 ? 0 : C / V;\n      return {\n        h: this._sanitizeNumber(H),\n        s: S,\n        b: V,\n        a: this._sanitizeNumber(a)\n      };\n    },\n    HueToRGB: function(p, q, h) {\n      if (h < 0) {\n        h += 1;\n      } else if (h > 1) {\n        h -= 1;\n      }\n      if ((h * 6) < 1) {\n        return p + (q - p) * h * 6;\n      } else if ((h * 2) < 1) {\n        return q;\n      } else if ((h * 3) < 2) {\n        return p + (q - p) * ((2 / 3) - h) * 6;\n      } else {\n        return p;\n      }\n    },\n    HSLtoRGB: function(h, s, l, a) {\n      if (s < 0) {\n        s = 0;\n      }\n      var q;\n      if (l <= 0.5) {\n        q = l * (1 + s);\n      } else {\n        q = l + s - (l * s);\n      }\n\n      var p = 2 * l - q;\n\n      var tr = h + (1 / 3);\n      var tg = h;\n      var tb = h - (1 / 3);\n\n      var r = Math.round(this.HueToRGB(p, q, tr) * 255);\n      var g = Math.round(this.HueToRGB(p, q, tg) * 255);\n      var b = Math.round(this.HueToRGB(p, q, tb) * 255);\n      return [r, g, b, this._sanitizeNumber(a)];\n    },\n    /**\n     * @param {String} strVal\n     * @returns {Object} Object containing h,s,b,a,format properties or FALSE if failed to parse\n     */\n    parse: function(strVal) {\n      if (arguments.length === 0) {\n        return false;\n      }\n\n      var that = this,\n        result = false,\n        isAlias = (typeof this.colors[strVal] !== \'undefined\'),\n        values, format;\n\n      if (isAlias) {\n        strVal = this.colors[strVal].toLowerCase().trim();\n      }\n\n      $.each(this.stringParsers, function(i, parser) {\n        var match = parser.re.exec(strVal);\n        values = match && parser.parse.apply(that, [match]);\n        if (values) {\n          result = {};\n          format = (isAlias ? \'alias\' : (parser.format ? parser.format : that.getValidFallbackFormat()));\n          if (format.match(/hsla?/)) {\n            result = that.RGBtoHSB.apply(that, that.HSLtoRGB.apply(that, values));\n          } else {\n            result = that.RGBtoHSB.apply(that, values);\n          }\n          if (result instanceof Object) {\n            result.format = format;\n          }\n          return false; // stop iterating\n        }\n        return true;\n      });\n      return result;\n    },\n    getValidFallbackFormat: function() {\n      var formats = [\n        \'rgba\', \'rgb\', \'hex\', \'hsla\', \'hsl\'\n      ];\n      if (this.origFormat && (formats.indexOf(this.origFormat) !== -1)) {\n        return this.origFormat;\n      }\n      if (this.fallbackFormat && (formats.indexOf(this.fallbackFormat) !== -1)) {\n        return this.fallbackFormat;\n      }\n\n      return \'rgba\'; // By default, return a format that will not lose the alpha info\n    },\n    /**\n     *\n     * @param {string} [format] (default: rgba)\n     * @param {boolean} [translateAlias] Return real color for pre-defined (non-standard) aliases (default: false)\n     * @param {boolean} [forceRawValue] Forces hashtag prefix when getting hex color (default: false)\n     * @returns {String}\n     */\n    toString: function(forceRawValue, format, translateAlias) {\n      format = format || this.origFormat || this.fallbackFormat;\n      translateAlias = translateAlias || false;\n\n      var c = false;\n\n      switch (format) {\n        case \'rgb\':\n          {\n            c = this.toRGB();\n            if (this.rgbaIsTransparent(c)) {\n              return \'transparent\';\n            }\n            return \'rgb(\' + c.r + \',\' + c.g + \',\' + c.b + \')\';\n          }\n          break;\n        case \'rgba\':\n          {\n            c = this.toRGB();\n            return \'rgba(\' + c.r + \',\' + c.g + \',\' + c.b + \',\' + c.a + \')\';\n          }\n          break;\n        case \'hsl\':\n          {\n            c = this.toHSL();\n            return \'hsl(\' + Math.round(c.h * 360) + \',\' + Math.round(c.s * 100) + \'%,\' + Math.round(c.l * 100) + \'%)\';\n          }\n          break;\n        case \'hsla\':\n          {\n            c = this.toHSL();\n            return \'hsla(\' + Math.round(c.h * 360) + \',\' + Math.round(c.s * 100) + \'%,\' + Math.round(c.l * 100) + \'%,\' + c.a + \')\';\n          }\n          break;\n        case \'hex\':\n          {\n            return this.toHex(forceRawValue);\n          }\n          break;\n        case \'alias\':\n          {\n            c = this.toAlias();\n\n            if (c === false) {\n              return this.toString(forceRawValue, this.getValidFallbackFormat());\n            }\n\n            if (translateAlias && !(c in Color.webColors) && (c in this.predefinedColors)) {\n              return this.predefinedColors[c];\n            }\n\n            return c;\n          }\n        default:\n          {\n            return c;\n          }\n          break;\n      }\n    },\n    // a set of RE\'s that can match strings and generate color tuples.\n    // from John Resig color plugin\n    // https://github.com/jquery/jquery-color/\n    stringParsers: [{\n      re: /rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*?\\)/,\n      format: \'rgb\',\n      parse: function(execResult) {\n        return [\n          execResult[1],\n          execResult[2],\n          execResult[3],\n          1\n        ];\n      }\n    }, {\n      re: /rgb\\(\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*?\\)/,\n      format: \'rgb\',\n      parse: function(execResult) {\n        return [\n          2.55 * execResult[1],\n          2.55 * execResult[2],\n          2.55 * execResult[3],\n          1\n        ];\n      }\n    }, {\n      re: /rgba\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(?:,\\s*(\\d*(?:\\.\\d+)?)\\s*)?\\)/,\n      format: \'rgba\',\n      parse: function(execResult) {\n        return [\n          execResult[1],\n          execResult[2],\n          execResult[3],\n          execResult[4]\n        ];\n      }\n    }, {\n      re: /rgba\\(\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d*(?:\\.\\d+)?)\\s*)?\\)/,\n      format: \'rgba\',\n      parse: function(execResult) {\n        return [\n          2.55 * execResult[1],\n          2.55 * execResult[2],\n          2.55 * execResult[3],\n          execResult[4]\n        ];\n      }\n    }, {\n      re: /hsl\\(\\s*(\\d*(?:\\.\\d+)?)\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*?\\)/,\n      format: \'hsl\',\n      parse: function(execResult) {\n        return [\n          execResult[1] / 360,\n          execResult[2] / 100,\n          execResult[3] / 100,\n          execResult[4]\n        ];\n      }\n    }, {\n      re: /hsla\\(\\s*(\\d*(?:\\.\\d+)?)\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d*(?:\\.\\d+)?)\\s*)?\\)/,\n      format: \'hsla\',\n      parse: function(execResult) {\n        return [\n          execResult[1] / 360,\n          execResult[2] / 100,\n          execResult[3] / 100,\n          execResult[4]\n        ];\n      }\n    }, {\n      re: /#?([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/,\n      format: \'hex\',\n      parse: function(execResult) {\n        return [\n          parseInt(execResult[1], 16),\n          parseInt(execResult[2], 16),\n          parseInt(execResult[3], 16),\n          1\n        ];\n      }\n    }, {\n      re: /#?([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/,\n      format: \'hex\',\n      parse: function(execResult) {\n        return [\n          parseInt(execResult[1] + execResult[1], 16),\n          parseInt(execResult[2] + execResult[2], 16),\n          parseInt(execResult[3] + execResult[3], 16),\n          1\n        ];\n      }\n    }],\n    colorNameToHex: function(name) {\n      if (typeof this.colors[name.toLowerCase()] !== \'undefined\') {\n        return this.colors[name.toLowerCase()];\n      }\n      return false;\n    }\n  };\n\n  /*\n   * Default plugin options\n   */\n  var defaults = {\n    horizontal: false, // horizontal mode layout ?\n    inline: false, //forces to show the colorpicker as an inline element\n    color: false, //forces a color\n    format: false, //forces a format\n    input: \'input\', // children input selector\n    container: false, // container selector\n    component: \'.add-on, .input-group-addon\', // children component selector\n    fallbackColor: false, // fallback color value. null = keeps current color.\n    fallbackFormat: \'hex\', // fallback color format\n    hexNumberSignPrefix: true, // put a \'#\' (number sign) before hex strings\n    sliders: {\n      saturation: {\n        maxLeft: 100,\n        maxTop: 100,\n        callLeft: \'setSaturation\',\n        callTop: \'setBrightness\'\n      },\n      hue: {\n        maxLeft: 0,\n        maxTop: 100,\n        callLeft: false,\n        callTop: \'setHue\'\n      },\n      alpha: {\n        maxLeft: 0,\n        maxTop: 100,\n        callLeft: false,\n        callTop: \'setAlpha\'\n      }\n    },\n    slidersHorz: {\n      saturation: {\n        maxLeft: 100,\n        maxTop: 100,\n        callLeft: \'setSaturation\',\n        callTop: \'setBrightness\'\n      },\n      hue: {\n        maxLeft: 100,\n        maxTop: 0,\n        callLeft: \'setHue\',\n        callTop: false\n      },\n      alpha: {\n        maxLeft: 100,\n        maxTop: 0,\n        callLeft: \'setAlpha\',\n        callTop: false\n      }\n    },\n    template: \'<div class="colorpicker dropdown-menu">\' +\n      \'<div class="colorpicker-saturation"><i><b></b></i></div>\' +\n      \'<div class="colorpicker-hue"><i></i></div>\' +\n      \'<div class="colorpicker-alpha"><i></i></div>\' +\n      \'<div class="colorpicker-color"><div /></div>\' +\n      \'<div class="colorpicker-selectors"></div>\' +\n      \'</div>\',\n    align: \'right\',\n    customClass: null, // custom class added to the colorpicker element\n    colorSelectors: null // custom color aliases\n  };\n\n  /**\n   * Colorpicker component class\n   *\n   * @param {Object|String} element\n   * @param {Object} options\n   * @constructor\n   */\n  var Colorpicker = function(element, options) {\n    this.element = $(element).addClass(\'colorpicker-element\');\n    this.options = $.extend(true, {}, defaults, this.element.data(), options);\n    this.component = this.options.component;\n    this.component = (this.component !== false) ? this.element.find(this.component) : false;\n    if (this.component && (this.component.length === 0)) {\n      this.component = false;\n    }\n    this.container = (this.options.container === true) ? this.element : this.options.container;\n    this.container = (this.container !== false) ? $(this.container) : false;\n\n    // Is the element an input? Should we search inside for any input?\n    this.input = this.element.is(\'input\') ? this.element : (this.options.input ?\n      this.element.find(this.options.input) : false);\n    if (this.input && (this.input.length === 0)) {\n      this.input = false;\n    }\n    // Set HSB color\n    this.color = this.createColor(this.options.color !== false ? this.options.color : this.getValue());\n\n    this.format = this.options.format !== false ? this.options.format : this.color.origFormat;\n\n    if (this.options.color !== false) {\n      this.updateInput(this.color);\n      this.updateData(this.color);\n    }\n\n    this.disabled = false;\n\n    // Setup picker\n    var $picker = this.picker = $(this.options.template);\n    if (this.options.customClass) {\n      $picker.addClass(this.options.customClass);\n    }\n    if (this.options.inline) {\n      $picker.addClass(\'colorpicker-inline colorpicker-visible\');\n    } else {\n      $picker.addClass(\'colorpicker-hidden\');\n    }\n    if (this.options.horizontal) {\n      $picker.addClass(\'colorpicker-horizontal\');\n    }\n    if (\n      ([\'rgba\', \'hsla\', \'alias\'].indexOf(this.format) !== -1) ||\n      this.options.format === false ||\n      this.getValue() === \'transparent\'\n    ) {\n      $picker.addClass(\'colorpicker-with-alpha\');\n    }\n    if (this.options.align === \'right\') {\n      $picker.addClass(\'colorpicker-right\');\n    }\n    if (this.options.inline === true) {\n      $picker.addClass(\'colorpicker-no-arrow\');\n    }\n    if (this.options.colorSelectors) {\n      var colorpicker = this,\n        selectorsContainer = colorpicker.picker.find(\'.colorpicker-selectors\');\n\n      if (selectorsContainer.length > 0) {\n        $.each(this.options.colorSelectors, function(name, color) {\n          var $btn = $(\'<i />\')\n            .addClass(\'colorpicker-selectors-color\')\n            .css(\'background-color\', color)\n            .data(\'class\', name).data(\'alias\', name);\n\n          $btn.on(\'mousedown.colorpicker touchstart.colorpicker\', function(event) {\n            event.preventDefault();\n            colorpicker.setValue(\n              colorpicker.format === \'alias\' ? $(this).data(\'alias\') : $(this).css(\'background-color\')\n            );\n          });\n          selectorsContainer.append($btn);\n        });\n        selectorsContainer.show().addClass(\'colorpicker-visible\');\n      }\n    }\n\n    // Prevent closing the colorpicker when clicking on itself\n    $picker.on(\'mousedown.colorpicker touchstart.colorpicker\', $.proxy(function(e) {\n      if (e.target === e.currentTarget) {\n        e.preventDefault();\n      }\n    }, this));\n\n    // Bind click/tap events on the sliders\n    $picker.find(\'.colorpicker-saturation, .colorpicker-hue, .colorpicker-alpha\')\n      .on(\'mousedown.colorpicker touchstart.colorpicker\', $.proxy(this.mousedown, this));\n\n    $picker.appendTo(this.container ? this.container : $(\'body\'));\n\n    // Bind other events\n    if (this.input !== false) {\n      this.input.on({\n        \'keyup.colorpicker\': $.proxy(this.keyup, this)\n      });\n      this.input.on({\n        \'change.colorpicker\': $.proxy(this.change, this)\n      });\n      if (this.component === false) {\n        this.element.on({\n          \'focus.colorpicker\': $.proxy(this.show, this)\n        });\n      }\n      if (this.options.inline === false) {\n        this.element.on({\n          \'focusout.colorpicker\': $.proxy(this.hide, this)\n        });\n      }\n    }\n\n    if (this.component !== false) {\n      this.component.on({\n        \'click.colorpicker\': $.proxy(this.show, this)\n      });\n    }\n\n    if ((this.input === false) && (this.component === false)) {\n      this.element.on({\n        \'click.colorpicker\': $.proxy(this.show, this)\n      });\n    }\n\n    // for HTML5 input[type=\'color\']\n    if ((this.input !== false) && (this.component !== false) && (this.input.attr(\'type\') === \'color\')) {\n\n      this.input.on({\n        \'click.colorpicker\': $.proxy(this.show, this),\n        \'focus.colorpicker\': $.proxy(this.show, this)\n      });\n    }\n    this.update();\n\n    $($.proxy(function() {\n      this.element.trigger(\'create\');\n    }, this));\n  };\n\n  Colorpicker.Color = Color;\n\n  Colorpicker.prototype = {\n    constructor: Colorpicker,\n    destroy: function() {\n      this.picker.remove();\n      this.element.removeData(\'colorpicker\', \'color\').off(\'.colorpicker\');\n      if (this.input !== false) {\n        this.input.off(\'.colorpicker\');\n      }\n      if (this.component !== false) {\n        this.component.off(\'.colorpicker\');\n      }\n      this.element.removeClass(\'colorpicker-element\');\n      this.element.trigger({\n        type: \'destroy\'\n      });\n    },\n    reposition: function() {\n      if (this.options.inline !== false || this.options.container) {\n        return false;\n      }\n      var type = this.container && this.container[0] !== window.document.body ? \'position\' : \'offset\';\n      var element = this.component || this.element;\n      var offset = element[type]();\n      if (this.options.align === \'right\') {\n        offset.left -= this.picker.outerWidth() - element.outerWidth();\n      }\n      this.picker.css({\n        top: offset.top + element.outerHeight(),\n        left: offset.left\n      });\n    },\n    show: function(e) {\n      if (this.isDisabled()) {\n        // Don\'t show the widget if it\'s disabled (the input)\n        return;\n      }\n      this.picker.addClass(\'colorpicker-visible\').removeClass(\'colorpicker-hidden\');\n      this.reposition();\n      $(window).on(\'resize.colorpicker\', $.proxy(this.reposition, this));\n      if (e && (!this.hasInput() || this.input.attr(\'type\') === \'color\')) {\n        if (e.stopPropagation && e.preventDefault) {\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }\n      if ((this.component || !this.input) && (this.options.inline === false)) {\n        $(window.document).on({\n          \'mousedown.colorpicker\': $.proxy(this.hide, this)\n        });\n      }\n      this.element.trigger({\n        type: \'showPicker\',\n        color: this.color\n      });\n    },\n    hide: function(e) {\n      if ((typeof e !== \'undefined\') && e.target) {\n        // Prevent hide if triggered by an event and an element inside the colorpicker has been clicked/touched\n        if (\n          $(e.currentTarget).parents(\'.colorpicker\').length > 0 ||\n          $(e.target).parents(\'.colorpicker\').length > 0\n        ) {\n          return false;\n        }\n      }\n      this.picker.addClass(\'colorpicker-hidden\').removeClass(\'colorpicker-visible\');\n      $(window).off(\'resize.colorpicker\', this.reposition);\n      $(window.document).off({\n        \'mousedown.colorpicker\': this.hide\n      });\n      this.update();\n      this.element.trigger({\n        type: \'hidePicker\',\n        color: this.color\n      });\n    },\n    updateData: function(val) {\n      val = val || this.color.toString(false, this.format);\n      this.element.data(\'color\', val);\n      return val;\n    },\n    updateInput: function(val) {\n      val = val || this.color.toString(false, this.format);\n      if (this.input !== false) {\n        this.input.prop(\'value\', val);\n        this.input.trigger(\'change\');\n      }\n      return val;\n    },\n    updatePicker: function(val) {\n      if (typeof val !== \'undefined\') {\n        this.color = this.createColor(val);\n      }\n      var sl = (this.options.horizontal === false) ? this.options.sliders : this.options.slidersHorz;\n      var icns = this.picker.find(\'i\');\n      if (icns.length === 0) {\n        return;\n      }\n      if (this.options.horizontal === false) {\n        sl = this.options.sliders;\n        icns.eq(1).css(\'top\', sl.hue.maxTop * (1 - this.color.value.h)).end()\n          .eq(2).css(\'top\', sl.alpha.maxTop * (1 - this.color.value.a));\n      } else {\n        sl = this.options.slidersHorz;\n        icns.eq(1).css(\'left\', sl.hue.maxLeft * (1 - this.color.value.h)).end()\n          .eq(2).css(\'left\', sl.alpha.maxLeft * (1 - this.color.value.a));\n      }\n      icns.eq(0).css({\n        \'top\': sl.saturation.maxTop - this.color.value.b * sl.saturation.maxTop,\n        \'left\': this.color.value.s * sl.saturation.maxLeft\n      });\n\n      this.picker.find(\'.colorpicker-saturation\')\n        .css(\'backgroundColor\', this.color.toHex(true, this.color.value.h, 1, 1, 1));\n\n      this.picker.find(\'.colorpicker-alpha\')\n        .css(\'backgroundColor\', this.color.toHex(true));\n\n      this.picker.find(\'.colorpicker-color, .colorpicker-color div\')\n        .css(\'backgroundColor\', this.color.toString(true, this.format));\n\n      return val;\n    },\n    updateComponent: function(val) {\n      var color;\n\n      if (typeof val !== \'undefined\') {\n        color = this.createColor(val);\n      } else {\n        color = this.color;\n      }\n\n      if (this.component !== false) {\n        var icn = this.component.find(\'i\').eq(0);\n        if (icn.length > 0) {\n          icn.css({\n            \'backgroundColor\': color.toString(true, this.format)\n          });\n        } else {\n          this.component.css({\n            \'backgroundColor\': color.toString(true, this.format)\n          });\n        }\n      }\n\n      return color.toString(false, this.format);\n    },\n    update: function(force) {\n      var val;\n      if ((this.getValue(false) !== false) || (force === true)) {\n        // Update input/data only if the current value is not empty\n        val = this.updateComponent();\n        this.updateInput(val);\n        this.updateData(val);\n        this.updatePicker(); // only update picker if value is not empty\n      }\n      return val;\n\n    },\n    setValue: function(val) { // set color manually\n      this.color = this.createColor(val);\n      this.update(true);\n      this.element.trigger({\n        type: \'changeColor\',\n        color: this.color,\n        value: val\n      });\n    },\n    /**\n     * Creates a new color using the instance options\n     * @protected\n     * @param {String} val\n     * @returns {Color}\n     */\n    createColor: function(val) {\n      return new Color(\n        val ? val : null,\n        this.options.colorSelectors,\n        this.options.fallbackColor ? this.options.fallbackColor : this.color,\n        this.options.fallbackFormat,\n        this.options.hexNumberSignPrefix\n      );\n    },\n    getValue: function(defaultValue) {\n      defaultValue = (typeof defaultValue === \'undefined\') ? this.options.fallbackColor : defaultValue;\n      var val;\n      if (this.hasInput()) {\n        val = this.input.val();\n      } else {\n        val = this.element.data(\'color\');\n      }\n      if ((val === undefined) || (val === \'\') || (val === null)) {\n        // if not defined or empty, return default\n        val = defaultValue;\n      }\n      return val;\n    },\n    hasInput: function() {\n      return (this.input !== false);\n    },\n    isDisabled: function() {\n      return this.disabled;\n    },\n    disable: function() {\n      if (this.hasInput()) {\n        this.input.prop(\'disabled\', true);\n      }\n      this.disabled = true;\n      this.element.trigger({\n        type: \'disable\',\n        color: this.color,\n        value: this.getValue()\n      });\n      return true;\n    },\n    enable: function() {\n      if (this.hasInput()) {\n        this.input.prop(\'disabled\', false);\n      }\n      this.disabled = false;\n      this.element.trigger({\n        type: \'enable\',\n        color: this.color,\n        value: this.getValue()\n      });\n      return true;\n    },\n    currentSlider: null,\n    mousePointer: {\n      left: 0,\n      top: 0\n    },\n    mousedown: function(e) {\n      if (!e.pageX && !e.pageY && e.originalEvent && e.originalEvent.touches) {\n        e.pageX = e.originalEvent.touches[0].pageX;\n        e.pageY = e.originalEvent.touches[0].pageY;\n      }\n      e.stopPropagation();\n      e.preventDefault();\n\n      var target = $(e.target);\n\n      //detect the slider and set the limits and callbacks\n      var zone = target.closest(\'div\');\n      var sl = this.options.horizontal ? this.options.slidersHorz : this.options.sliders;\n      if (!zone.is(\'.colorpicker\')) {\n        if (zone.is(\'.colorpicker-saturation\')) {\n          this.currentSlider = $.extend({}, sl.saturation);\n        } else if (zone.is(\'.colorpicker-hue\')) {\n          this.currentSlider = $.extend({}, sl.hue);\n        } else if (zone.is(\'.colorpicker-alpha\')) {\n          this.currentSlider = $.extend({}, sl.alpha);\n        } else {\n          return false;\n        }\n        var offset = zone.offset();\n        //reference to guide\'s style\n        this.currentSlider.guide = zone.find(\'i\')[0].style;\n        this.currentSlider.left = e.pageX - offset.left;\n        this.currentSlider.top = e.pageY - offset.top;\n        this.mousePointer = {\n          left: e.pageX,\n          top: e.pageY\n        };\n        //trigger mousemove to move the guide to the current position\n        $(window.document).on({\n          \'mousemove.colorpicker\': $.proxy(this.mousemove, this),\n          \'touchmove.colorpicker\': $.proxy(this.mousemove, this),\n          \'mouseup.colorpicker\': $.proxy(this.mouseup, this),\n          \'touchend.colorpicker\': $.proxy(this.mouseup, this)\n        }).trigger(\'mousemove\');\n      }\n      return false;\n    },\n    mousemove: function(e) {\n      if (!e.pageX && !e.pageY && e.originalEvent && e.originalEvent.touches) {\n        e.pageX = e.originalEvent.touches[0].pageX;\n        e.pageY = e.originalEvent.touches[0].pageY;\n      }\n      e.stopPropagation();\n      e.preventDefault();\n      var left = Math.max(\n        0,\n        Math.min(\n          this.currentSlider.maxLeft,\n          this.currentSlider.left + ((e.pageX || this.mousePointer.left) - this.mousePointer.left)\n        )\n      );\n      var top = Math.max(\n        0,\n        Math.min(\n          this.currentSlider.maxTop,\n          this.currentSlider.top + ((e.pageY || this.mousePointer.top) - this.mousePointer.top)\n        )\n      );\n      this.currentSlider.guide.left = left + \'px\';\n      this.currentSlider.guide.top = top + \'px\';\n      if (this.currentSlider.callLeft) {\n        this.color[this.currentSlider.callLeft].call(this.color, left / this.currentSlider.maxLeft);\n      }\n      if (this.currentSlider.callTop) {\n        this.color[this.currentSlider.callTop].call(this.color, top / this.currentSlider.maxTop);\n      }\n      // Change format dynamically\n      // Only occurs if user choose the dynamic format by\n      // setting option format to false\n      if (\n        this.options.format === false &&\n        (this.currentSlider.callTop === \'setAlpha\' ||\n          this.currentSlider.callLeft === \'setAlpha\')\n      ) {\n\n        // Converting from hex / rgb to rgba\n        if (this.color.value.a !== 1) {\n          this.format = \'rgba\';\n          this.color.origFormat = \'rgba\';\n        }\n\n        // Converting from rgba to hex\n        else {\n          this.format = \'hex\';\n          this.color.origFormat = \'hex\';\n        }\n      }\n      this.update(true);\n\n      this.element.trigger({\n        type: \'changeColor\',\n        color: this.color\n      });\n      return false;\n    },\n    mouseup: function(e) {\n      e.stopPropagation();\n      e.preventDefault();\n      $(window.document).off({\n        \'mousemove.colorpicker\': this.mousemove,\n        \'touchmove.colorpicker\': this.mousemove,\n        \'mouseup.colorpicker\': this.mouseup,\n        \'touchend.colorpicker\': this.mouseup\n      });\n      return false;\n    },\n    change: function(e) {\n      this.keyup(e);\n    },\n    keyup: function(e) {\n      if ((e.keyCode === 38)) {\n        if (this.color.value.a < 1) {\n          this.color.value.a = Math.round((this.color.value.a + 0.01) * 100) / 100;\n        }\n        this.update(true);\n      } else if ((e.keyCode === 40)) {\n        if (this.color.value.a > 0) {\n          this.color.value.a = Math.round((this.color.value.a - 0.01) * 100) / 100;\n        }\n        this.update(true);\n      } else {\n        this.color = this.createColor(this.input.val());\n        // Change format dynamically\n        // Only occurs if user choose the dynamic format by\n        // setting option format to false\n        if (this.color.origFormat && this.options.format === false) {\n          this.format = this.color.origFormat;\n        }\n        if (this.getValue(false) !== false) {\n          this.updateData();\n          this.updateComponent();\n          this.updatePicker();\n        }\n      }\n      this.element.trigger({\n        type: \'changeColor\',\n        color: this.color,\n        value: this.input.val()\n      });\n    }\n  };\n\n  $.colorpicker = Colorpicker;\n\n  $.fn.colorpicker = function(option) {\n    var apiArgs = Array.prototype.slice.call(arguments, 1),\n      isSingleElement = (this.length === 1),\n      returnValue = null;\n\n    var $jq = this.each(function() {\n      var $this = $(this),\n        inst = $this.data(\'colorpicker\'),\n        options = ((typeof option === \'object\') ? option : {});\n\n      if (!inst) {\n        inst = new Colorpicker(this, options);\n        $this.data(\'colorpicker\', inst);\n      }\n\n      if (typeof option === \'string\') {\n        if ($.isFunction(inst[option])) {\n          returnValue = inst[option].apply(inst, apiArgs);\n        } else { // its a property ?\n          if (apiArgs.length) {\n            // set property\n            inst[option] = apiArgs[0];\n          }\n          returnValue = inst[option];\n        }\n      } else {\n        returnValue = $this;\n      }\n    });\n    return isSingleElement ? returnValue : $jq;\n  };\n\n  $.fn.colorpicker.constructor = Colorpicker;\n\n}));\n'},222:function(n,e,t){t(1)(t(223))},223:function(n,e){n.exports='/* global $ ace document:true */\n\nfunction initCodeEditors(api_sources, iframe) {\n    "use strict";\n\n    function addPanel(element, name, beforeElem) {\n        var tabsContainer = element.find("[role=\'tablist\']");\n        var contentsContainer = element.find(".tab-content");\n        var idx = tabsContainer.find(">li").length;\n        var tab = $("<li class=\\"nav-item\\"><a class=\\"nav-link" + (idx === 0 ? " active" : "") + "\\" href=\\"#tab-" + idx + "\\" data-toggle=\\"tab\\">" + name + "</a></li>");\n        var content = $("<div id=\\"tab-" + idx + "\\" class=\\"tab-pane" + (idx === 0 ? " active" : "") + " role=\\"tabpanel\\" style=\\"width:100%;height:100%;\\"><div class=\\"content\\" data-content=\\"" + name + "\\" style=\\"width:100%;min-height:100%;\\"></div></div>");\n        if( typeof beforeElem !== \'undefined\' ) {\n            beforeElem.before(tab);\n        } else {\n            tabsContainer.append(tab);\n        }\n        contentsContainer.append(content);\n        content.find(".content").djtemplates({\n            api_source_code: api_sources,\n            iframe_view: iframe\n        });\n    };\n\n    var templates = (typeof templateNames !== "undefined" ) ?\n        templateNames : [];\n    if( typeof iframe !== "undefined" ) {\n        templates = iframe.contentWindow.templateNames || [];\n    }\n    if( templates.length > 0 ) {\n        $("#code-editor .tab-content").empty();\n        for( var idx = 0; idx < templates.length; ++idx ) {\n            addPanel($("#code-editor"), templates[idx].name);\n        }\n    }\n    $("#code-editor [role=\'tablist\']").append("<li id=\\"new-source-btn\\" class=\\"nav-item\\"><a class=\\"nav-link\\" href=\\"#new-source\\" data-toggle=\\"modal\\" data-target=\\"#new-source\\"><i class=\\"fa fa-plus\\"></i> New</a></li>");\n    $("#code-editor #new-source-submit").click(function(event) {\n        event.preventDefault();\n        var name = $("#code-editor #new-source [name=\'name\']").val();\n        var path = null;\n        while( name.length > 0 && name[0] === \'/\' ) {\n            name = name.substr(1);\n        }\n        if( name.length > 0 && name[name.length - 1] === \'/\' ) {\n            path = name + \'index.html\';\n        } else {\n            path = name + \'.html\';\n        }\n        $.ajax({\n            url: api_sources + path,\n            method: "POST",\n            datatype: "json",\n            contentType: "application/json; charset=utf-8",\n            data: JSON.stringify({\n                path: path, text: "{% extends \\"base.html\\" %}\\n"}),\n            beforeSend: function(xhr, settings) {\n                xhr.setRequestHeader("X-CSRFToken", getMetaCSRFToken());\n            },\n            success: function(){\n                // move to new page\n                var last = api_sources.indexOf(\'/api/\');\n                window.location = api_sources.substr(0, last) + \'/\' + name;\n            },\n            error: function(resp) {\n                showErrorMessages(resp);\n            }\n        });\n    });\n}\n\n(function ($) {\n    "use strict";\n\n    /** Template editor\n        <div id="#_editor_"></div>\n     */\n    function TemplateEditor(el, options){\n        this.element = el;\n        this.$element = $(el);\n        this.options = options;\n        this.activeFile = "";\n        this.init();\n    }\n\n    TemplateEditor.prototype = {\n        init: function () {\n            var self = this;\n            self.$element.on("pages.loadresources", function(event) {\n                self.loadSource();\n            });\n\n            // load ace and extensions\n            self.editor = ace.edit(self.element);\n            self.editor.setTheme("ace/theme/monokai");\n            self.editor.setOption({\n                enableEmmet: true,\n                enableBasicAutocompletion: true,\n                enableSnippets: true,\n                enableLiveAutocompletion: false\n            });\n        },\n\n        loadSource: function(){\n            var self = this;\n            var path = self.$element.attr("data-content");\n            $.ajax({\n                url: self.options.api_source_code + path,\n                method: "GET",\n                datatype: "json",\n                contentType: "application/json; charset=utf-8",\n                success: function(resp){\n                    self.editor.setValue(resp.text);\n                    var modelist = ace.require("ace/ext/modelist");\n                    var path = resp.path;\n                    if(path.indexOf(\'.\') !== -1){\n                        var chunks = path.split(\'.\').reverse()\n                        if(chunks[0] === \'eml\'){\n                            chunks[0] = \'html\'; // treat eml as html\n                            path = chunks.reverse().join(\'.\');\n                        }\n                    }\n                    var mode = modelist.getModeForPath(path).mode;\n                    self.editor.getSession().setMode(mode);\n                    self.editor.focus();\n                    self.editor.gotoLine(0);\n                    self.editor.on("change", $.debounce( 250, function() {\n                        self.saveSource();\n                    }));\n                },\n                error: function(resp) {\n                    showErrorMessages(resp);\n                }\n            });\n        },\n\n        saveSource: function(){\n            var self = this;\n            var path = self.$element.attr("data-content");\n            self.$element.trigger(\'pages.save\');\n            $.ajax({\n                url: self.options.api_source_code + path,\n                method: "PUT",\n                datatype: "json",\n                contentType: "application/json; charset=utf-8",\n                data: JSON.stringify({\n                    path: path, text: self.editor.getValue()}),\n                beforeSend: function(xhr, settings) {\n                    xhr.setRequestHeader("X-CSRFToken", getMetaCSRFToken());\n                },\n                success: function(){\n                    // reload content\n                    if ( self.options.iframe_view ){\n                        self.options.iframe_view.src = self.options.iframe_view.src;\n                    }\n                },\n                error: function(resp) {\n                    showErrorMessages(resp);\n                }\n            });\n        }\n\n    };\n\n    $.fn.djtemplates = function(options) {\n        var opts = $.extend( {}, $.fn.djtemplates.defaults, options );\n        return this.each(function() {\n            if (!$.data($(this), "djtemplates")) {\n                $.data($(this), "djtemplates", new TemplateEditor(this, opts));\n            }\n        });\n    };\n\n    $.fn.djtemplates.defaults = {\n        api_source_code: "/api/source"\n    };\n\n})(jQuery);\n'},224:function(n,e,t){t(1)(t(225))},225:function(n,e){n.exports='/* global document:true */\n\n(function ($) {\n    "use strict";\n\n    /**\n       Augment an user interface element with an editor for .less source\n       code.\n\n       The element should look like:\n\n       <div id="style-editor">\n         <ul class="nav nav-tabs dashboard-tab" role="tablist">\n         </ul>\n         <div>\n           <div>\n             <input id="variable-name" type="text" name="..." value="..." />\n             <button class="style-reset-button"\n                  type="button" title="reset to default"\n                  data-target="#variable-name" data-reset-value="...">\n             </button>\n           </div>\n           ...\n         </div>\n       </div>\n    */\n    function StyleEditor(el, options){\n        this.element = el;\n        this.$element = $(el);\n        this.options = options;\n        this.$refreshButton = this.$element.find(\'.refresh-styles\');\n        this.init();\n    }\n\n    StyleEditor.prototype = {\n        init: function () {\n            var self = this;\n            self.$element.on("pages.loadresources", function(event) {\n                self.loadVariables();\n            });\n\n            self.$refreshButton.on("click", function(event) {\n                self.refreshStyles();\n            });\n            self.$element.find(\'button.style-reset-button\').on("click", function(event){\n                var $button = $(event.target);\n                var $target = $(document.getElementById($button.attr(\'data-target\')));\n                $target.val($button.attr(\'data-reset-value\'));\n            });\n\n            self.$element.find(\'[href="#cssfile"]\').text(self._cssfileCandidate());\n\n            self.setupCustomEditors();\n        },\n\n        _cssfileCandidate: function() {\n            var cssfileCandidate = null;\n            var links = $(\'head > link\');\n            if( links.length > 0 ) {\n                var pathParts = $(links[0]).attr("href").split(\'/\');\n                cssfileCandidate = pathParts.pop();\n                var queryP = cssfileCandidate.lastIndexOf(\'?\');\n                if( queryP > 0 ) {\n                    cssfileCandidate = cssfileCandidate.substr(0, queryP);\n                }\n            }\n            return cssfileCandidate;\n        },\n\n        _apiLessOverrides: function() {\n            var self = this;\n            var cssfileCandidate = self._cssfileCandidate();\n            if( cssfileCandidate ) {\n                return self.options.api_less_overrides + "?cssfile=" + cssfileCandidate;\n            }\n            return self.options.api_less_overrides;\n        },\n\n        loadVariables: function() {\n            var self = this;\n            $.ajax({\n                url: self._apiLessOverrides(),\n                method: "GET",\n                datatype: "json",\n                contentType: "application/json; charset=utf-8",\n                success: function(resp){\n                    var results = resp;\n                    if( typeof resp.results !== "undefined" ) {\n                        /* We are dealing with a paginator. */\n                        results = resp.results;\n                    }\n                    for( var idx = 0; idx < results.length; ++idx ) {\n                        var variable = results[idx];\n                        var inp = self.$element.find(\n                            \'[name="\' + variable.name + \'"]\');\n                        if( inp ) {\n                            inp.attr("value", variable.value);\n                        }\n                    }\n                },\n                error: function(resp) {\n                    showErrorMessages(resp);\n                }\n            });\n        },\n\n        setupCustomEditors: function(){\n            var self = this;\n\n            // trigger refresh of css file when input looses focus.\n            self.$element.find(\'[data-dj-style-variable-editor]\').blur(function() {\n                self.$element.find(".api-spinner").show();\n                self.refreshStyles();\n            });\n\n            // custom color editor\n            self.$element.find("[data-dj-style-variable-editor=color]").each(function(){\n                var $input = $(this);\n                $input.wrap(\'<div>\');\n                $input.parent().addClass(\'input-group\')\n                var $button = $(\'<span class="input-group-btn"><a href="#" class="btn btn-default" id="cp4"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span></a></span>\');\n                $input.after($button);\n                $button.colorpicker({\n                    customClass: \'color-picker-widget\'\n                }).on(\'changeColor\', function(e) {\n                    $input.val(e.color.toHex());\n                }).on(\'hidePicker\', function() {\n                    $input.blur();\n                });\n            });\n\n            var styleEditorZIndex = parseInt(self.$element.css(\'z-index\'));\n            // make sure color picker is on top of style editor\n            $(\'.color-picker-widget\').css(\'z-index\', styleEditorZIndex + 1 + \'\');\n        },\n        getLess: function(){\n            if( this.options.iframe_view ) {\n                return this.options.iframe_view.contentWindow.less;\n            }\n            return less;\n        },\n        modifiedVars: function(){\n            var formValues = $(\'#editable-styles-form\').serializeArray();\n\n            var modifiedVars = {};\n            for(var i = 0; i < formValues.length ; i ++){\n                var formElem = formValues[i];\n                if ( formElem.value != \'\' ){\n                    modifiedVars[formElem.name] = formElem.value;\n                }\n            }\n            return modifiedVars;\n        },\n\n        refreshCSS: function(css) {\n            var self = this;\n            var less = self.getLess();\n            // XXX If we could find the ``browser`` variable, we might\n            // just be able to call ``createCSS`` directly.\n            // browser.createCSS(window.document, css, sheet);\n            less.refresh(true, self.modifiedVars());\n        },\n\n        refreshStyles: function(){\n            var self = this;\n            var formValues = $(\'#editable-styles-form\').serializeArray();\n            var less_variables = []\n\n            for(var i = 0; i < formValues.length ; i ++){\n                var formElem = formValues[i];\n                if ( formElem.value != \'\' ){\n                    less_variables.push({\n                        name: formElem.name,\n                        value: formElem.value\n                    });\n                }\n            }\n\n            var less = self.getLess();\n            if( typeof less.sheets === "undefined" ) {\n                var lessUrlCandidate = null;\n                var cssfileCandidate = null;\n                var links = $(\'head > link\');\n                if( links.length > 0 ) {\n                    var pathParts = $(links[0]).attr("href").split(\'/\');\n                    cssfileCandidate = pathParts.pop();\n                    lessUrlCandidate = cssfileCandidate.substr(\n                        0, cssfileCandidate.lastIndexOf("."));\n                    pathParts = "/static/cache".split(\'/\'); // XXX match less.rootpath\n                    if( pathParts[pathParts.length - 1] === \'cache\' ) {\n                        pathParts.pop(); // remove the cache/ dir.\n                    }\n                    pathParts.push(lessUrlCandidate);\n                    pathParts.push(lessUrlCandidate + ".less");\n                    lessUrlCandidate = pathParts.join(\'/\');\n                }\n                links = $(\'head > link[rel="stylesheet/less"]\');\n                if( links.length === 0 ) {\n                    $(\'head\').append(\'<link rel="stylesheet/less" href="\'\n                        + lessUrlCandidate + \'"/>\');\n                }\n                less.registerStylesheetsImmediately();\n            }\n\n            var fileManager = less.environment.fileManagers[0];\n            var instanceOptions = jQuery.extend(less.options, {modifyVars: self.modifiedVars()});\n\n            var lesshref = $(less.sheets[0]).attr("href");\n            fileManager.loadFile(lesshref, null, instanceOptions,\n                                 less.environment, function(e, loadedFile) {\n\n                var data = loadedFile.contents,\n                    path = loadedFile.filename,\n                    webInfo = loadedFile.webInfo;\n                var newFileInfo = {\n                    currentDirectory: fileManager.getPath(path),\n                    filename: path,\n                    rootFilename: path,\n                    relativeUrls: instanceOptions.relativeUrls};\n                newFileInfo.entryPath = newFileInfo.currentDirectory;\n                newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\n                instanceOptions.rootFileInfo = newFileInfo;\n\n                less.render(data, instanceOptions, function(err, result) {\n                    if( err ) {\n                        self.$element.find(".api-spinner").hide();\n                        showErrorMessages(err);\n                    } else {\n                        $.ajax({\n                            url: self.options.api_sitecss,\n                            method: "POST",\n                            contentType: "text/plain; charset=utf-8",\n                            data: result.css,\n                            beforeSend: function(xhr, settings) {\n                                xhr.setRequestHeader("X-CSRFToken", getMetaCSRFToken());\n                                xhr.setRequestHeader("Content-Disposition", "attachment; filename=" + lesshref.substr(0, lesshref.lastIndexOf(".")) + ".css");\n                            },\n                            success: function(response) {\n                                $.ajax({\n                                    url: self._apiLessOverrides(),\n                                    method: "PUT",\n                                    datatype: "json",\n                                    contentType: "application/json; charset=utf-8",\n                                    data: JSON.stringify(less_variables),\n                                    beforeSend: function(xhr, settings) {\n                                        xhr.setRequestHeader("X-CSRFToken", getMetaCSRFToken());\n                                    },\n                                    success: function(response) {\n                                        self.refreshCSS(result.css);\n                                        self.$element.find(".api-spinner").hide();\n                                    },\n                                    error: function(resp) {\n                                        self.$element.find(".api-spinner").hide();\n                                        showErrorMessages(resp);\n                                    }\n                                });\n                            },\n                            error: function(resp) {\n                                self.$element.find(".api-spinner").hide();\n                                showErrorMessages(resp);\n                            }\n                        });\n                    }\n                });\n            });\n        }\n    };\n\n    $.fn.djstyles = function(options) {\n        var opts = $.extend( {}, $.fn.djstyles.defaults, options );\n        return this.each(function() {\n            if (!$.data(this, "djstyles")) {\n                $.data(this, "djstyles", new StyleEditor(this, opts));\n            }\n        });\n    };\n\n    $.fn.djstyles.defaults = {\n        api_less_overrides: "/api/less-overrides",\n        api_sitecss: null\n    };\n\n})(jQuery);\n'},5:function(n,e,t){t(1)(t(6))},6:function(n,e){n.exports="/** Functions used for display of localized dates and numbers.\n */\n\nfunction humanizeDate(at_time) {\n    return moment(at_time).format(DATE_FORMAT);\n}\n\n\nfunction humanizeNumber(cell, unit, scale) {\n    scale = scale || 1;\n    var value = cell * scale;\n\n    if( typeof Intl !== 'undefined' &&\n        typeof Intl.NumberFormat !== 'undefined') {\n        var locale = 'en-US';\n        if( navigator.languages && navigator.languages.length > 0 ) {\n            locale = navigator.languages[0];\n        } else if( navigator.language ) {\n            locale = navigator.language;\n        } else if( navigator.browserLanguage ) {\n            locale = navigator.browserLanguage;\n        }\n        if( unit ) {\n            return (new Intl.NumberFormat(locale, {\n                style: 'currency', currency: unit})).format(value);\n        }\n        return (new Intl.NumberFormat(locale)).format(value);\n    }\n\n    // `Intl` is not present. Let's do what we can.\n    var precision = 0;\n    var thousandsSeparator = ',';\n    var decimalSeparator = '.';\n    var symbol = '';\n    var symbolOnLeft = true;\n\n    if( unit ) {\n        // We have a currency unit\n        if( unit === \"usd\" || unit === \"cad\" ) {\n            symbol = \"$\";\n        } else if( unit === \"eur\" ) {\n            symbol = \"\\u20ac\";\n        }\n        precision = 2;\n    }\n\n    var stringified = Math.abs(value).toFixed(precision);\n    var decimalPart = precision ? stringified.slice(-1 - precision) : '';\n    var integralPart = precision ? stringified.slice(0, -1 - precision)\n        : stringified;\n\n    var rem = integralPart.length % 3;\n    var head = rem > 0 ? (integralPart.slice(0, rem) + (\n        integralPart.length > 3 ? thousandsSeparator : ''))\n        : '';\n    var sign = value < 0 ? '-' : '';\n    var valueFormatted = sign + head + integralPart.slice(rem).replace(\n        /(\\d{3})(?=\\d)/g, '$1' + thousandsSeparator) + decimalPart;\n\n    return symbolOnLeft ?\n        symbol + valueFormatted : valueFormatted + symbol;\n};\n\n\nfunction humanizeTimeDelta(at_time, ends_at) {\n    var self = this;\n    var cutOff = ends_at ? moment(ends_at, DATE_FORMAT) : moment();\n    var dateTime = moment(at_time);\n    if( dateTime <= cutOff ) {\n        var timeAgoTemplate = (self.$labels && self.$labels.timeAgoTemplate) ?\n            self.$labels.timeAgoTemplate : \"%(timedelta)s ago\";\n        return timeAgoTemplate.replace(\"%(timedelta)s\",\n            moment.duration(cutOff.diff(dateTime)).humanize());\n    }\n    var timeLeftTemplate = (self.$labels && self.$labels.timeLeftTemplate) ?\n        self.$labels.timeLeftTemplate : \"%(timedelta)s ago\";\n    return timeLeftTemplate.replace(\"%(timedelta)s\",\n        moment.duration(dateTime.diff(cutOff)).humanize());\n};\n"}});